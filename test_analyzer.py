import logging
import os
from datetime import datetime, timezone # Or however you get timestamps
from dotenv import load_dotenv

# --- Force DEBUG level for root logger ---
logging.getLogger().setLevel(logging.DEBUG)

# --- Load Environment Variables ---
# Assumes .env is in the same directory or parent directory
# Adjust path if needed, e.g., os.path.join(os.path.dirname(__file__), '..', '.env')
load_dotenv()

# --- Import after loading env vars ---
try:
    # Only import the necessary public functions
    from src.analyzer import init_analyzer, extract_message_data
except ImportError as e:
    print(f"ImportError: {e}. Ensure you are running this from the workspace root and src/analyzer.py exists.")
    exit(1)


# Configure logging
console = logging.getLogger() # Use standard logger for simplicity here

# --- Hardcode the test data ---
test_message_link = "https://t.me/c/1520572254/3922"
test_channel = "Crypto Drive" # Assuming based on previous query results
# Using the actual message text from the previous query
test_message_text = """
‚úÖ**Optimism:**[ ](https://img1.teletype.in/files/40/68/40687c44-6a55-4507-a68a-ccb2c474fae5.jpeg)**–õ—é—Ç–æ –≤—ã–Ω–æ—Å–∏–º —à–µ—Å—Ç–æ–π AirDrop**

–†–∞–Ω–µ–µ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ [**—É–ø–æ–º–∏–Ω–∞–ª**](https://t.me/drivecrypto/3832) –ø—Ä–æ–µ–∫—Ç –≤ –ø–æ–¥–±–æ—Ä–∫–∞—Ö –∏ –¥–µ–ª–∞–ª [**–ø–æ–¥—Ä–æ–±–Ω—ã–µ**](https://t.me/drivecrypto/3621)[** **](https://t.me/drivecrypto/3621)[**–ø–æ—Å—Ç—ã**](https://t.me/drivecrypto/3621). –ï—Å–ª–∏ –∑–∞–±—ã–ª–∏, —Ç–æ –≤—Å–µ–≥–æ –±—ã–ª–æ **5** –¥—Ä–æ–ø–æ–≤, –ø—Ä–∏—á–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö. –ö–æ–º–∞–Ω–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Ä–∞–∑–¥–∞—Ç—å –µ—â–µ **13%** —Ç–æ–∫–µ–Ω–æ–≤ $OP.

–°–µ–π—á–∞—Å —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –∏ –ø–æ–¥–µ–ª–∏—Ç—Å—è –º—ã—Å–ª—è–º–∏. –ü—Ä–æ–π–¥–µ–º—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É.

**‚ÑπÔ∏è**** SuperStack**
–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞ –∫–∞–º–ø–∞–Ω–∏—é [**SuperStack**](https://app.optimism.io/superstacks) –±—É–∫–≤–∞–ª—å–Ω–æ —Å–µ–≥–æ–¥–Ω—è. –í –µ–µ —Ä–∞–º–∫–∞—Ö –º—ã —Å–º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∞—Ç—å **XP** (–∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã).

‚Äî –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ [**—Å–∞–π—Ç**](https://app.optimism.io/superstacks) –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ—à–µ–ª–µ–∫
‚Äî –õ–∏—Å—Ç–∞–µ–º –Ω–∏–∂–µ, –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è –ø—É–ª

–ö–∞–º–ø–∞–Ω–∏—è –±—É–¥–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–∞ –¥–æ **30** **–∏—é–Ω—è**. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω–æ **6** **—Å–µ—Ç–µ–π** __(OP, INK, Unichain, Base, Soneium, World)__. –î–æ—Å—Ç—É–ø–Ω–æ **2** –¥–∞–ø–ø–∫–∏: **UniSwap** –∏ **Aerodrome**. –î–∞—é—Ç –ø–æ **10** **XP** –∑–∞ –∫–∞–∂–¥—ã–π **$.**

**‚ÑπÔ∏è**** SuperBadges**
–ú—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π \"**Super Account**\"__ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ **ENS** –¥–æ–º–µ–Ω–∞)__. –ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ + –≤ –∞–∫–∫–∞—É–Ω—Ç–µ –µ—Å—Ç—å **leaderboard** –∏ –∑–∞–¥–∞–Ω–∏—è —Å –±–µ–π–¥–∂–∞–º–∏.

‚Äî –ù–∞ [**—Å–∞–π—Ç–µ**](https://account.superchain.eco/) –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫
‚Äî –ü—Ä–∏–¥—É–º—ã–≤–∞–µ–º —Å–µ–±–µ –Ω–∏–∫ & –∏–º—è
‚Äî –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä –∏ —Ñ–∞—Ä–º–∏–º [**–±–µ–π–¥–∂–∏**](https://account.superchain.eco/badges)

–ï—Å–ª–∏ –≤—ã —Ä–∞–Ω–µ–µ –∞–∫—Ç–∏–≤–Ω–∏—á–∞–ª–∏, –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ \"**CLAIM BADGES**\" (—Ç–µ–º —Å–∞–º—ã–º –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ –∫–∞–∫–∏–µ –±–µ–π–¥–∂–∏ —É –≤–∞—Å –µ—Å—Ç—å). + –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—é –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, —Ç–∏–ø—É **Unichain**, **Soneium**, **INK**

–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ **Superboard Quests**. –≠—Ç–æ –≤—Å–µ–º–∏ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –∫–≤–µ—Å—Ç–∞–º–∏ –æ—Ç —Ä–∞–∑–Ω—ã—Ö —á–µ–π–Ω–æ–≤ (–∏–∑ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã **Superchain**). –ú–Ω–æ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–µ –±—É–¥—É, –¥–µ–ª–∞–π—Ç–µ –∫–≤–µ—Å—Ç—ã –Ω–∞ [**—Å–∞–π—Ç–µ**](https://superboard.xyz/quests)

–ó–∞—Ç—Ä–∞—Ç—ã —É –Ω–∞—Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ__ (–≤—Å–µ —Ç–∞–∫–∏ L2)__. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç–æ–∫–µ–Ω—ã $OP, –∏ –≤—ã –∏—Ö –Ω–µ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–ª–∏ ‚Äî [**–∏—Å–ø—Ä–∞–≤–ª—è–π—Ç–µ—Å—å**](https://vote.optimism.io/delegates) (—Å–º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö), –∑–∞ —ç—Ç–æ —Ä–∞–Ω–µ–µ –±—ã–ª –¥—Ä–æ–ø

üê≥ ‚Äî –ù–∞—Å—ã–ø–∫–∞ –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ–π, work
üëæ ‚Äî –®–ª—è–ø–∞ –≤—Å–µ —ç—Ç–æ, —Å–∫–∏–ø __(–Ω–∞–ø–∏—à—É –º—ã—Å–ª–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ö)__

üíé –ù–∞—à [—á–∞—Ç –ø–æ –¥—Ä–æ–ø–∞–º:](https://t.me/+l3JdEnmDKAU3OGFi) —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ –≤—ã–Ω–æ—Å—É, –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â—å –∏ –ø–æ–ª—å–∑–∞, –∂–¥–µ–º –≤—Å–µ—Ö!
**\n–í—Å–µ –¥–ª—è –º—É–ª—å—Ç–∏–∞–∫–∫–∫–∏–Ω–≥–∞:** ‚úî[LINK](https://t.me/drivecrypto/3578)         
**CryptoDrive:** ‚úâÔ∏è[Telegram ](https://t.me/drivecrypto)| ‚ñ∂Ô∏è[Youtube](https://www.youtube.com/@crypto_drive)
"""
# Use a fixed timestamp for testing consistency, make it timezone-aware (UTC)
# You can replace this with the actual message timestamp if needed
test_timestamp = datetime(2025, 4, 17, 16, 2, 2, tzinfo=timezone.utc)

# --- Run the analysis ---
if __name__ == "__main__":
    if init_analyzer():
        console.info(f"Running analysis for test message: {test_message_link}")
        try:
            # Run the standard analysis function
            count, guide_flag, error = extract_message_data(
                test_message_text,
                test_channel,
                test_timestamp,
                test_message_link
            )
            console.info("--- Analysis Results ---")
            console.info(f"Updates Saved Count: {count}")
            console.info(f"Guide Saved Flag: {guide_flag}")
            console.info(f"Error Message: {error}")
            console.info("----------------------")
            if error:
                console.warning("Analysis returned an error.")
            elif count == 0 and not guide_flag:
                console.warning("Analysis completed, but no relevant updates or guide were identified/saved.")
            else:
                 console.info("Analysis completed. Please check Supabase for the saved data.")

        except Exception as e:
            console.error(f"CRITICAL ERROR during test analysis run: {e}", exc_info=True)
    else:
        console.error("Failed to initialize analyzer. Check logs and .env configuration.") 